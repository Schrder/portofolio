---
import Photo from "../components/Photo.astro";
import NavigationPage from "./NavigationPage.astro";
import { fade } from "astro:transitions";

const { frontmatter } = Astro.props;
const title = frontmatter.title;
const aspectRatio = `${frontmatter.width} / ${frontmatter.height}`;

let photoWidth, photoHeight, pageHeight;
if (frontmatter.photoWidth > frontmatter.photoHeight) {
  photoWidth = "100%";
  photoHeight = "auto";
} else {
  photoWidth = "auto";
  photoHeight = "100%";
  pageHeight = "80vh";
}

const anim = {
  old: {
    name: "slide-down",
    duration: "200ms",
    easing: "ease-in",
    fillMode: "backwards",
  },
  new: {
    name: "slide-up",
    duration: "200ms",
    delay: "50ms",
    easing: "ease-out",
    fillMode: "backwards",
  },
};

const myFade = {
  forwards: anim,
  backwards: anim,
};
---

<NavigationPage title={title}>
  <section id="detail-page">
    <Photo images={[{ title }]} animate={false} className="photo" />
    <h1 transition:animate={myFade} transition:name="description">
      {frontmatter.description}
    </h1>
  </section>
</NavigationPage>

<style define:vars={{ aspectRatio, photoWidth, photoHeight, pageHeight }}>
  @keyframes slide-up {
    0% {
      transform: translateY(2.5rem);
    }
    100% {
      transform: translateY(0);
    }
  }
  @keyframes slide-down {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(2.5rem);
    }
  }
  #detail-page {
    display: grid;
    grid-template-rows: min-content 1fr;
    justify-content: center;
  }

  h1 {
    font-size: 1.5rem;
    font-weight: 200;
  }

  .photo {
    height: var(--pageHeight);
    --photo-aspect-ratio: var(--aspectRatio);
    --photo-width: var(--photoWidth);
    --photo-height: var(--photoHeight);
  }
</style>
