---
import Photo from "../components/Photo.astro";
import Nav from "../components/Nav.astro";
import Layout from "./Layout.astro";

const { frontmatter } = Astro.props;
const title = frontmatter.title;
const aspectRatio = `${frontmatter.width} / ${frontmatter.height}`;

let photoWidth, photoHeight, photoMaxHeight, pageHeight, enhancePageHeight;

if (frontmatter.width > frontmatter.height) {
  photoWidth = `calc(80vh * ${frontmatter.width} / ${frontmatter.height})`;
  photoHeight = "auto";
} else {
  photoWidth = "auto";
  photoHeight = "100%";
  pageHeight = "80vh";
  enhancePageHeight = "80svh";
}

const anim = {
  old: {
    name: "slide-down",
    duration: "200ms",
    easing: "ease-in",
    fillMode: "backwards",
  },
  new: {
    name: "slide-up",
    duration: "200ms",
    delay: "50ms",
    easing: "ease-out",
    fillMode: "backwards",
  },
};

const myFade = {
  forwards: anim,
  backwards: anim,
};
---

<Layout title={title}>
  <main>
    <Nav />
    <section id="detail-page">
      <Photo images={[{ title }]} className="photo" />
      <h1 transition:animate={myFade}>
        {frontmatter.description}
      </h1>
    </section>
  </main>
</Layout>

<style
  define:vars={{
    aspectRatio,
    photoWidth,
    photoHeight,
    photoMaxHeight,
    pageHeight,
    enhancePageHeight,
  }}
>
  @keyframes slide-up {
    0% {
      opacity: 0;
      transform: translateY(2.5rem);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  @keyframes slide-down {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(2.5rem);
    }
  }
  #detail-page {
    display: grid;
    grid-template-rows: min-content 1fr;
    justify-content: center;
  }

  #detail-page {
    & :global(img) {
      margin-inline: auto;
    }
  }

  h1 {
    font-size: 1rem;
    font-weight: 200;
    text-align: center;
  }

  @media (min-width: 768px) {
    h1 {
      font-size: 1.4rem;
    }
  }

  .photo {
    height: var(--pageHeight);
    height: var(--enhancePageHeight);

    --photo-aspect-ratio: var(--aspectRatio);
    --photo-width: var(--photoWidth);
    --photo-height: var(--photoHeight);
    --photo-max-height: var(--photoMaxHeight);
  }
</style>
