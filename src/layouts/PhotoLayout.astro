---
import Photo from "../components/Photo.astro";
import Layout from "./Layout.astro";
import "../styles/nav.css";
import "../styles/sticky-nav.css";
import "../styles/navigation-name-reset.css";
import * as BerlijnDuitsland2022 from "../pages/fragments/berlijn-duitsland-2022.md";
import * as FunatsuJapan2017 from "../pages/fragments/funatsu-japan-2017.md";
import * as FransumNederland2017 from "../pages/fragments/fransum-nederland-2017.md";
import * as Tanabe2Japan2017 from "../pages/fragments/tanabe-2-japan-2017.md";
import * as DarelkebdaniMarokko2015 from "../pages/fragments/darelkebdani-marokko-2015.md";
import * as JeruzalemIsrael2014 from "../pages/fragments/jeruzalem-israel-2014.md";
import * as AmsterdamNederland2022 from "../pages/fragments/amsterdam-nederland-2022.md";
import * as ArdabilIran2016 from "../pages/fragments/ardabil-iran-2016.md";
import * as Isfahan2Iran2016 from "../pages/fragments/isfahan-2-iran-2016.md";
import * as FujikawaguchikoJapan2017 from "../pages/fragments/fujikawaguchiko-japan-2017.md";
import * as LissabonPortugal2023 from "../pages/fragments/lissabon-portugal-2023.md";
import * as LissabonPortugal2015 from "../pages/fragments/lissabon-portugal-2015.md";
import * as TanabeJapan2017 from "../pages/fragments/tanabe-japan-2017.md";
import * as Geiranger2Noorwegen2022 from "../pages/fragments/geiranger-2-noorwegen-2022.md";
import * as Isfahan3Iran2016 from "../pages/fragments/isfahan-3-iran-2016.md";
import * as TokyoJapan2017 from "../pages/fragments/tokyo-japan-2017.md";
import * as SeoulKorea2019 from "../pages/fragments/seoul-korea-2019.md";
import * as Isfahan4Iran2016 from "../pages/fragments/isfahan-4-iran-2016.md";
import * as Amsterdam2Nederland2017 from "../pages/fragments/amsterdam-2-nederland-2017.md";
import * as Lissabon2Portugal2023 from "../pages/fragments/lissabon-2-portugal-2023.md";
import * as EnnaItalie2022 from "../pages/fragments/enna-italie-2022.md";
import * as PortoPortugal2015 from "../pages/fragments/porto-portugal-2015.md";
import * as AmsterdamNederland2017 from "../pages/fragments/amsterdam-nederland-2017.md";
import * as AarhusDenemarken2023 from "../pages/fragments/aarhus-denemarken-2023.md";
import * as NoordpolderzijlNederland2017 from "../pages/fragments/noordpolderzijl-nederland-2017.md";
import * as GeirangerNoorwegen2022 from "../pages/fragments/geiranger-noorwegen-2022.md";
import * as QazvinIran2016 from "../pages/fragments/qazvin-iran-2016.md";
import * as IsfahanIran2016 from "../pages/fragments/isfahan-iran-2016.md";
import * as MadridSpanje2013 from "../pages/fragments/madrid-spanje-2013.md";
import * as Tokyo2Japan2017 from "../pages/fragments/tokyo-2-japan-2017.md";

const items: {
  title: string;
  width: number;
  height: number;
}[] = [
  {
    title: BerlijnDuitsland2022.frontmatter.title,
    width: BerlijnDuitsland2022.frontmatter.width,
    height: BerlijnDuitsland2022.frontmatter.height,
  },
  {
    title: FunatsuJapan2017.frontmatter.title,
    width: FunatsuJapan2017.frontmatter.width,
    height: FunatsuJapan2017.frontmatter.height,
  },
  {
    title: FransumNederland2017.frontmatter.title,
    width: FransumNederland2017.frontmatter.width,
    height: FransumNederland2017.frontmatter.height,
  },
  {
    title: Tanabe2Japan2017.frontmatter.title,
    width: Tanabe2Japan2017.frontmatter.width,
    height: Tanabe2Japan2017.frontmatter.height,
  },
  {
    title: DarelkebdaniMarokko2015.frontmatter.title,
    width: DarelkebdaniMarokko2015.frontmatter.width,
    height: DarelkebdaniMarokko2015.frontmatter.height,
  },
  {
    title: JeruzalemIsrael2014.frontmatter.title,
    width: JeruzalemIsrael2014.frontmatter.width,
    height: JeruzalemIsrael2014.frontmatter.height,
  },
  {
    title: AmsterdamNederland2022.frontmatter.title,
    width: AmsterdamNederland2022.frontmatter.width,
    height: AmsterdamNederland2022.frontmatter.height,
  },
  {
    title: ArdabilIran2016.frontmatter.title,
    width: ArdabilIran2016.frontmatter.width,
    height: ArdabilIran2016.frontmatter.height,
  },
  {
    title: Isfahan3Iran2016.frontmatter.title,
    width: Isfahan3Iran2016.frontmatter.width,
    height: Isfahan3Iran2016.frontmatter.height,
  },
  {
    title: FujikawaguchikoJapan2017.frontmatter.title,
    width: FujikawaguchikoJapan2017.frontmatter.width,
    height: FujikawaguchikoJapan2017.frontmatter.height,
  },
  {
    title: LissabonPortugal2023.frontmatter.title,
    width: LissabonPortugal2023.frontmatter.width,
    height: LissabonPortugal2023.frontmatter.height,
  },
  {
    title: LissabonPortugal2015.frontmatter.title,
    width: LissabonPortugal2015.frontmatter.width,
    height: LissabonPortugal2015.frontmatter.height,
  },
  {
    title: TanabeJapan2017.frontmatter.title,
    width: TanabeJapan2017.frontmatter.width,
    height: TanabeJapan2017.frontmatter.height,
  },
  {
    title: Geiranger2Noorwegen2022.frontmatter.title,
    width: Geiranger2Noorwegen2022.frontmatter.width,
    height: Geiranger2Noorwegen2022.frontmatter.height,
  },
  {
    title: Isfahan2Iran2016.frontmatter.title,
    width: Isfahan2Iran2016.frontmatter.width,
    height: Isfahan2Iran2016.frontmatter.height,
  },
  {
    title: TokyoJapan2017.frontmatter.title,
    width: TokyoJapan2017.frontmatter.width,
    height: TokyoJapan2017.frontmatter.height,
  },
  {
    title: SeoulKorea2019.frontmatter.title,
    width: SeoulKorea2019.frontmatter.width,
    height: SeoulKorea2019.frontmatter.height,
  },
  {
    title: Isfahan4Iran2016.frontmatter.title,
    width: Isfahan4Iran2016.frontmatter.width,
    height: Isfahan4Iran2016.frontmatter.height,
  },
  {
    title: Amsterdam2Nederland2017.frontmatter.title,
    width: Amsterdam2Nederland2017.frontmatter.width,
    height: Amsterdam2Nederland2017.frontmatter.height,
  },
  {
    title: Lissabon2Portugal2023.frontmatter.title,
    width: Lissabon2Portugal2023.frontmatter.width,
    height: Lissabon2Portugal2023.frontmatter.height,
  },
  {
    title: EnnaItalie2022.frontmatter.title,
    width: EnnaItalie2022.frontmatter.width,
    height: EnnaItalie2022.frontmatter.height,
  },
  {
    title: PortoPortugal2015.frontmatter.title,
    width: PortoPortugal2015.frontmatter.width,
    height: PortoPortugal2015.frontmatter.height,
  },
  {
    title: AmsterdamNederland2017.frontmatter.title,
    width: AmsterdamNederland2017.frontmatter.width,
    height: AmsterdamNederland2017.frontmatter.height,
  },
  {
    title: AarhusDenemarken2023.frontmatter.title,
    width: AarhusDenemarken2023.frontmatter.width,
    height: AarhusDenemarken2023.frontmatter.height,
  },
  {
    title: NoordpolderzijlNederland2017.frontmatter.title,
    width: NoordpolderzijlNederland2017.frontmatter.width,
    height: NoordpolderzijlNederland2017.frontmatter.height,
  },
  {
    title: GeirangerNoorwegen2022.frontmatter.title,
    width: GeirangerNoorwegen2022.frontmatter.width,
    height: GeirangerNoorwegen2022.frontmatter.height,
  },
  {
    title: QazvinIran2016.frontmatter.title,
    width: QazvinIran2016.frontmatter.width,
    height: QazvinIran2016.frontmatter.height,
  },
  {
    title: IsfahanIran2016.frontmatter.title,
    width: IsfahanIran2016.frontmatter.width,
    height: IsfahanIran2016.frontmatter.height,
  },
  {
    title: MadridSpanje2013.frontmatter.title,
    width: MadridSpanje2013.frontmatter.width,
    height: MadridSpanje2013.frontmatter.height,
  },
  {
    title: Tokyo2Japan2017.frontmatter.title,
    width: Tokyo2Japan2017.frontmatter.width,
    height: Tokyo2Japan2017.frontmatter.height,
  },
];
const { frontmatter } = Astro.props;
const title = frontmatter.title;
const aspectRatio = `${frontmatter.width} / ${frontmatter.height}`;

let photoWidth, pageHeight, enhancePageHeight;

if (frontmatter.width > frontmatter.height) {
  photoWidth = `calc(var(--max-photo-height) * ${frontmatter.width} / ${frontmatter.height})`;
  pageHeight = "auto";
} else {
  photoWidth = "auto";
  pageHeight = `calc(var(--container-width) * ${frontmatter.height} / ${frontmatter.width})`;
}

const anim = {
  old: {
    name: "slide-down",
    duration: "200ms",
    easing: "ease-in",
    fillMode: "backwards",
  },
  new: {
    name: "slide-up",
    duration: "200ms",
    delay: "50ms",
    easing: "ease-out",
    fillMode: "backwards",
  },
};

const myFade = {
  forwards: anim,
  backwards: anim,
};

const detailAnimation = {
  old: {
    ...anim.old,
    delay: "100ms",
  },
  new: {
    ...anim.new,
    delay: "150ms",
  },
};

const myDetailFade = {
  forwards: detailAnimation,
  backwards: detailAnimation,
};
---

<Layout title={title}>
  <main>
    <nav class="Navigation">
      <a class="Navigation-link" href="/">
        <img class="Navigation-logo" src="/logo.png" alt="logo" /></a
      >
      <h2 class="Navigation-heading">
        <a class="Navigation-name" href="/#photos"
          >tom van der bijl<span>l</span></a
        >
      </h2>
      <div class="Navigation-menu">
        <a class="Navigation-item" href="/contact">contact</a>
        <a class="Navigation-item" href="https://instagram.com/tomvanderbijll"
          >instagram</a
        >
      </div>
    </nav>
    <section id="detail-page">
      {
        items.map((item) => {
          if (item.title === title) {
            return (
              <div id={`main-section-${item.title}`}>
                <Photo
                  images={[{ title }]}
                  loading="eager"
                  fetchPriority="high"
                />
                <div class="text-container">
                  <div>
                    <h1 transition:animate={myFade}>
                      {frontmatter.description}
                      <span class="year">({frontmatter.year})</span>
                    </h1>
                  </div>
                  <div class="details" transition:animate={myDetailFade}>
                    <p class="english">{frontmatter.detailsEnglish}/</p>
                    <p>{frontmatter.detailsDutch}</p>
                  </div>
                </div>
              </div>
            );
          }
          return (
            <div
              id={item.title}
              class="animate"
              style={`
                --aspect-ratio: ${item.width} / ${item.height}; 
                --loading-width: ${item.width > item.height ? "100%" : "auto"}; 
                --loading-height: ${
                  item.width > item.height
                    ? "auto"
                    : `calc(var(--container-width) * ${item.height} / ${item.width})`
                };
              `}
            >
              <aside />
            </div>
          );
        })
      }
    </section>
    <script is:inline defer>
      (() => {
        const parser = new DOMParser();

        function handleIntersection(entries) {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const title = entry.target.id;
              if (entry.target.children[0].nodeName.toLowerCase() === "aside") {
                fetch(`/fragments/${title}`)
                  .then((response) => response.text())
                  .then((html) => {
                    const fragmentHTML = parser.parseFromString(
                      html,
                      "text/html",
                    );

                    document
                      .getElementById(`${title}`)
                      .replaceChildren(
                        fragmentHTML.getElementById(`main-section-${title}`),
                      );
                  });
              }
            }
          });
        }

        const observer = new IntersectionObserver(handleIntersection, {
          root: document.querySelector("section"),
          rootMargin: "50% 0px 50% 0px",
        });

        document.querySelectorAll("section .animate").forEach((child) => {
          observer.observe(child);
        });
      })();
    </script>
    <script is:inline define:vars={{ title }}>
      document.querySelector(`#${title}`).parentElement.scrollIntoView();
    </script>
    <style>
      footer {
        background-color: var(--background-color);
        padding: 0.5em;
        position: sticky;
        bottom: 0;
      }

      @media (min-width: 768px) {
        footer {
          display: none;
        }
      }

      footer > nav {
        display: flex;
        gap: 1em;
        justify-content: center;
      }

      footer > nav a {
        display: block;
        color: var(--text-color);
        font-weight: 100;
      }
    </style>
    <footer>
      <nav>
        <a href="/contact">contact</a>
        <a href="https://instagram.com/tomvanderbijll">instagram</a>
      </nav>
    </footer>
  </main>
</Layout>

<style
  define:vars={{
    aspectRatio,
    photoWidth,
    pageHeight,
    enhancePageHeight,
  }}
>
  @keyframes slide-up {
    0% {
      opacity: 0;
      transform: translateY(2.5rem);
    }

    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide-down {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(2.5rem);
    }
  }

  main {
    height: 100vh;
    height: 100svh;
    --container-width: 96vw;
    --max-photo-height: 70svh;
  }

  @supports not (height: 1svh) {
    main {
      --max-photo-height: 70vh;
    }
  }

  #detail-page {
    display: grid;
    grid-template-rows: min-content 1fr;
    justify-content: center;
  }

  #detail-page {
    & :global(img) {
      margin-inline: auto;
    }
  }

  .text-container {
    text-align: center;
  }

  h1 {
    margin-top: 0.75vh;
    font-size: 1rem;
    font-weight: 200;
    margin-bottom: 0;
  }

  section {
    scroll-snap-type: y mandatory;
    overflow: scroll;
    height: 100%;
  }

  section > div {
    /* Roughly the size of the screen minus the top bar and footer on mobile */
    height: 88vh;
    height: 88svh;
    scroll-snap-align: start;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .animate > aside {
    width: var(--loading-width);
    height: var(--loading-height);
    margin-inline: auto;
    aspect-ratio: var(--aspect-ratio);
  }

  #detail-page :global(img) {
    height: var(--pageHeight);
    width: var(--photoWidth);
    aspect-ratio: var(--aspectRatio);
    border-radius: 0;
  }

  .animate > aside,
  #detail-page :global(img) {
    max-height: var(--max-photo-height);
    background-color: var(--variant-2);
  }

  .year {
    font-size: 0.95em;
  }

  .details {
    display: flex;
    justify-content: center;
    gap: 0.25rem;
    font-weight: 100;
    margin-top: 0.5vh;
    font-size: 0.8rem;
  }

  /*
  .english {
    font-weight: 400;
  }
   */

  .details > p {
    margin: 0;
  }

  @media (min-width: 668px) {
    h1 {
      font-size: 1.4rem;
    }

    section > div {
      height: 95vh;
      height: 95svh;
      justify-content: flex-start;
    }

    .details {
      font-size: 1rem;
    }

    main {
      --max-photo-height: 78svh;
    }
  }
</style>
